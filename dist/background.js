(()=>{"use strict";var e=function(e,t,o,r){return new(o||(o=Promise))((function(n,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function c(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,c)}l((r=r.apply(e,t||[])).next())}))};const t=()=>new Promise(((e,t)=>{const o=indexedDB.open("topic_url_state_db",1);o.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains("topic_url_state_db_object_store")){const e=t.createObjectStore("topic_url_state_db_object_store",{keyPath:"id"});e.createIndex("topic","topic",{unique:!1}),e.createIndex("current_url","current_url",{unique:!1}),e.createIndex("last_topic","last_topic",{unique:!1}),e.put({id:"topic_url_state",topic:void 0,last_topic:void 0,current_url:void 0})}},o.onsuccess=()=>{e(o.result)},o.onerror=()=>{t(o.error)}}));function o(){return e(this,void 0,void 0,(function*(){const e=yield t();return new Promise(((t,o)=>{try{const r=e.transaction("topic_url_state_db_object_store","readonly").objectStore("topic_url_state_db_object_store").get("topic_url_state");r.onsuccess=()=>t(r.result),r.onerror=()=>o(r.error)}catch(e){o(e)}}))}))}function r(o){return e(this,arguments,void 0,(function*({id:e,new_topic:o,current_url:r}){const n=yield t();return new Promise(((t,s)=>{const i=n.transaction("topic_url_state_db_object_store","readwrite").objectStore("topic_url_state_db_object_store").put({id:e,current_url:r,last_topic:o,topic:o});i.onsuccess=()=>{t()},i.onerror=()=>{s()}}))}))}const n=()=>new Promise(((e,t)=>{const o=indexedDB.open("milestone3db",1);o.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("milestone3db_object_store")||t.createObjectStore("milestone3db_object_store",{keyPath:"url"})},o.onsuccess=()=>{e(o.result)},o.onerror=()=>{t(o.error)}})),s=t=>e(void 0,[t],void 0,(function*({current_url:e,last_topic:t,rating:o=0,status:r="none"}){const s=yield n();return new Promise(((n,i)=>{const c=s.transaction("milestone3db_object_store","readwrite").objectStore("milestone3db_object_store").add({url:e,topic:t,rating:o,status:r,visited_datetime:(new Date).toISOString()});c.onsuccess=()=>{n()},c.onerror=()=>{i(c.error)}}))})),i=t=>e(void 0,void 0,void 0,(function*(){const e=yield n();return new Promise(((o,r)=>{const n=e.transaction("milestone3db_object_store","readonly").objectStore("milestone3db_object_store").get(t);n.onsuccess=()=>{n.result?o(n.result):o({})},n.onerror=()=>{r(n.error)}}))})),c=()=>e(void 0,void 0,void 0,(function*(){const e=yield n();return new Promise(((t,o)=>{const r=e.transaction("milestone3db_object_store","readonly").objectStore("milestone3db_object_store").getAll();r.onsuccess=()=>{t(r.result)},r.onerror=()=>{o(r.error)}}))})),l=t=>e(void 0,[t],void 0,(function*({current_url:t,rating:o,status:r,topic:s}){const c=yield n();return new Promise(((n,l)=>e(void 0,void 0,void 0,(function*(){const e=yield i(t);"url"in e||l("url not found!");const u=c.transaction("milestone3db_object_store","readwrite").objectStore("milestone3db_object_store");r&&(e.status=r),o&&(e.rating=o),s&&(e.topic=s);const d=u.put(Object.assign(Object.assign({},e),{visited_datetime:(new Date).toISOString()}));d.onsuccess=()=>{n()},d.onerror=()=>{l(d.error)}}))))}));var u=function(e,t,o,r){return new(o||(o=Promise))((function(n,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function c(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,c)}l((r=r.apply(e,t||[])).next())}))};chrome.runtime.onInstalled.addListener((e=>{"install"===e.reason?(console.log("Extension Installed Successfully - Upwork Extension"),chrome.storage.local.set({extension_enabled:!1,initialSearchIndexNext:-1,initialSearchIndexPrevious:0})):"update"===e.reason&&console.log("Extension Updated Successfully - Upwork Extension")})),chrome.runtime.onMessage.addListener(((e,n,d)=>"check_extension_state"===e.task?(u(void 0,void 0,void 0,(function*(){try{const e=yield chrome.storage.local.get("extension_enabled");if(!("extension_enabled"in e))throw new Error("Unable to find extension state - extension_enabled, does not exist");d(e.extension_enabled)}catch(e){console.log(e,"from background.ts - check_extension_state")}})),!0):"update_extension_state"===e.task?(u(void 0,void 0,void 0,(function*(){try{if(!("current_state"in e))throw new Error("No Current State is provided to update_extension_state");const t=e.current_state;!0===t&&chrome.storage.local.set({extension_enabled:!1});const o=!t;chrome.storage.local.set({extension_enabled:o}),d({success:!0,newState:o})}catch(e){d({success:!1}),console.log(e,"from background.ts - update_extension_state",e)}})),!0):"get_combo_box_topic"===e.task?(u(void 0,void 0,void 0,(function*(){try{const e=(yield t()).transaction("topic_url_state_db_object_store","readonly").objectStore("topic_url_state_db_object_store").get("topic_url_state");e.onsuccess=()=>{d(e.result)}}catch(e){d({success:!1}),console.log(e,"from background.ts - get_combo_box_topic",e)}})),!0):"add_new_topic"===e.task?(u(void 0,void 0,void 0,(function*(){try{if(!("topic"in e))throw new Error("Please provide a topic.");const t=yield chrome.tabs.query({active:!0,currentWindow:!0});if(!t[0]||!t[0].url)throw new Error("Unable to retrieve the active tab or URL.");const{id:n,topic:c,last_topic:u,current_url:a}=yield o();yield r({id:n,new_topic:e.topic,current_url:t[0].url});const _=yield i(t[0].url);_&&0!==Object.keys(_).length?yield l({current_url:t[0].url,topic:e.topic}):yield s({current_url:t[0].url,last_topic:e.topic});const p=yield o();d({success:!0,result:p})}catch(e){console.error("Error in background.ts - add_new_topic:",e),d({success:!1,error:e})}})),!0):"check_current_url"===e.task?(u(void 0,void 0,void 0,(function*(){try{const e=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0],t=yield i(e.url);d(t)}catch(e){console.log(e,"from check_current_url bg.ts"),d({success:!1,error:e})}})),!0):"get_allurl"===e.task?(u(void 0,void 0,void 0,(function*(){try{const e=yield c();d(e)}catch(e){console.log(e,"from check_current_url bg.ts"),d(e)}})),!0):"update_rating"===e.task?(u(void 0,void 0,void 0,(function*(){try{const t=yield o();if(void 0===(null==t?void 0:t.topic)||void 0===(null==t?void 0:t.last_topic))throw new Error("Please Add a topic first before trying to update rating!");const r=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0];if(!("url"in(yield i(r.url))))throw new Error("No Such entry in Db with this url! please try reloading.");if(!("new_rating"in e))throw new Error("No Rating value Found! Conrtact Developer");yield l({current_url:r.url,rating:e.new_rating});const n=yield i(r.url);d({success:!0,updated_rating:n.rating})}catch(e){e instanceof Error?d({success:!1,error:e.message}):d({success:!1,error:"unknown error occured  - check dev tool"})}})),!0):"update_status"===e.task?(u(void 0,void 0,void 0,(function*(){try{const t=yield o();if(void 0===(null==t?void 0:t.topic)||void 0===(null==t?void 0:t.last_topic))throw new Error("Please Add a topic first before trying to update status!");const r=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0];if(!("url"in(yield i(r.url))))throw new Error("cannot find url in milestone 3 db!");if(!("new_status"in e))throw new Error("No Status value Found! Conrtact Developer");yield l({current_url:r.url,status:e.new_status});const n=yield i(r.url);d({success:!0,updated_status:n.status})}catch(e){e instanceof Error?d({success:!1,error:e.message}):d({success:!1,error:"unknown error occured  - check dev tool"})}})),!0):"current_button_pressed"===e.task?(u(void 0,void 0,void 0,(function*(){yield chrome.storage.local.set({last_button_pressed:"next"});const e=yield o();if(void 0!==(null==e?void 0:e.current_url)){const t=yield i(e.current_url);if(0===Object.keys(t).length)return void d({success:!1,message:"state.url not found in url.db - try realoading or contact developer!"});const o=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0];chrome.tabs.update(o.id,{url:t.url}),yield r({id:"topic_url_state",current_url:t.url,new_topic:t.topic})}else d({success:!1,message:"current_url is undefined in state - please add a topic first! or contact developer"})})),!0):"next_button_pressed"===e.task?(u(void 0,void 0,void 0,(function*(){yield chrome.storage.local.set({last_button_pressed:"next"});const e=yield o();if(void 0!==(null==e?void 0:e.current_url)){const t=yield i(e.current_url);if(0===Object.keys(t).length)return void d({success:!1,message:"state.url not found in url.db - try realoading or contact developer!"});const o=yield c(),n=function({lastIndex:e,AllUrlArray:t,present_url:o,topic:r}){const n=t.slice(e+1).find((e=>!e.url.startsWith("chrome://")&&e.url!==o&&e.topic===r&&"done"!==e.status&&"ignore"!==e.status));return n?{newIndex:t.indexOf(n),nextUrl:n}:{newIndex:0,nextUrl:t.find((e=>!e.url.startsWith("chrome://")&&e.url!==o&&e.topic===r&&"done"!==e.status&&"ignore"!==e.status))}}({lastIndex:(yield chrome.storage.local.get("initialSearchIndexNext")).initialSearchIndexNext,AllUrlArray:o,present_url:t.url,topic:e.topic});if(yield chrome.storage.local.set({initialSearchIndexNext:n.newIndex}),void 0===n.nextUrl)return void d({success:!1,message:"no next url is found!"});yield r({id:"topic_url_state",current_url:t.url,new_topic:t.topic});const s=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0];chrome.tabs.update(s.id,{url:n.nextUrl.url})}else d({success:!1,message:"current_url is undefined in state - please add a topic first! or contact developer"})})),!0):"previous_button_pressed"===e.task?(u(void 0,void 0,void 0,(function*(){yield chrome.storage.local.set({last_button_pressed:"previous"});const e=yield o();if(void 0!==(null==e?void 0:e.current_url)){const t=yield i(e.current_url);if(0===Object.keys(t).length)return void d({success:!1,message:"state.url not found in url.db - try realoading or contact developer!"});const o=yield c();console.log(o,"allUrlsFromMilestone3Db");const n=function({lastIndex:e,AllUrlArray:t,present_url:o,topic:r}){e<0&&(e=0);const n=t.slice(0,e).reverse().find((e=>!e.url.startsWith("chrome://")&&e.url!==o&&e.topic===r&&"done"!==e.status&&"ignore"!==e.status));if(n)return{newIndex:t.indexOf(n),previousUrl:n};{const e=t.slice().reverse().find((e=>!e.url.startsWith("chrome://")&&e.url!==o&&e.topic===r&&"done"!==e.status&&"ignore"!==e.status));return{newIndex:e?t.indexOf(e):0,previousUrl:e}}}({lastIndex:(yield chrome.storage.local.get("initialSearchIndexPrevious")).initialSearchIndexPrevious,AllUrlArray:o,present_url:t.url,topic:e.topic});if(yield chrome.storage.local.set({initialSearchIndexPrevious:n.newIndex}),void 0===n.previousUrl)return void d({success:!1,message:"no previous url is found!"});yield r({id:"topic_url_state",current_url:t.url,new_topic:t.topic});const s=(yield chrome.tabs.query({active:!0,currentWindow:!0}))[0];chrome.tabs.update(s.id,{url:n.previousUrl.url})}else d({success:!1,message:"current_url is undefined in state - please add a topic first! or contact developer"})})),!0):void 0)),chrome.tabs.onUpdated.addListener(((r,n,i)=>u(void 0,void 0,void 0,(function*(){if("complete"===n.status&&i.active&&i.url)try{const{extension_enabled:r}=yield chrome.storage.local.get("extension_enabled"),n=yield o(),l=void 0===(null==n?void 0:n.last_topic)&&void 0===(null==n?void 0:n.topic);if(r&&!l){yield function(o){return e(this,void 0,void 0,(function*(){const e=yield t();return new Promise(((t,r)=>{const n=e.transaction("topic_url_state_db_object_store","readwrite").objectStore("topic_url_state_db_object_store"),s=n.get("topic_url_state");s.onsuccess=()=>{const e=s.result.last_topic,i=n.put(Object.assign(Object.assign({},s.result),{current_url:o,topic:e}));i.onsuccess=()=>{t()},i.onerror=()=>{r("put request error, UpdateUrlAndStateInDb")}}}))}))}(i.url);const r=yield o();yield s({current_url:i.url,last_topic:r.last_topic});const n=yield c();console.log(n,"background auto")}}catch(e){console.log(e,"from background.ts auto update tabs, tabs listener")}}))))})();